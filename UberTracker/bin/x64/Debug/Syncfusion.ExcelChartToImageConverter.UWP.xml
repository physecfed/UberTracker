<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.ExcelChartToImageConverter.UWP</name>
    </assembly>
    <members>
        <member name="F:Syncfusion.ExcelChartToImageConverter.GetChartSeries.RectangleSerieTypes">
            <summary>
            List contains the series in rectangle format
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfBarseries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfBar Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>BarSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfBarseries3D(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfBar Serie3D.
            </summary>
            <param name="serie">chart serie</param>
            <returns>BarSeries3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackBar100Series(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfStackingBar100 Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>StackingBar100Series</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfAreaSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfArea Serie.
            </summary>
            <param name="serie">chart serie</param>        
            <returns>AreaSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfAreaSeries3D(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfArea Serie3D.
            </summary>
            <param name="serie">chart serie</param>
            <returns>AreaSeries3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfColumnSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfColumn Serie.
            </summary>
            <param name="serie">chart serie</param>        
            <returns>ColumnSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ApplyTemplateFormats(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeries,System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            Apply the template formats on rectangle series
            </summary>
            <param name="serie">input XlsIO chart serie</param>
            <param name="sfChartSerie">input SfChart serie</param>
            <param name="negativeIndexes">List of negativeIndexes</param>
            <param name="isDefaultBorder">boolean value indicates whether the border is default</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SetVaryColorsOnSeries(Syncfusion.UI.Xaml.Charts.ChartSeries,Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Set the vary color by points for the series
            </summary>
            <param name="sfChartSerie">input sfchart serie</param>
            <param name="serie">input xlsio/officechart serie</param>
            <param name="count">number of data points</param>
            <param name="negativeIndexes">negative indexes list</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfColumnSeries3D(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfColumn Serie3D.
            </summary>
            <param name="serie">chart serie</param>       
            <returns>ColumnSeries3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfLineSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfLine Serie.
            </summary>
            <param name="serie">chart serie</param>        
            <returns>LineSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfLineSeries3D(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfLine Series3D.
            </summary>
            <param name="serie">chart serie</param>        
            <returns>LineSeries3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfSplineSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfSpline Serie.
            </summary>
            <param name="serie">chart serie</param>        
            <returns>SplineSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfPieSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfPie Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>PieSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfPieSeries3D(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfPie Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>PieSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfDoughnutSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfDoughnut Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>DoughnutSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackAreaSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfStackingArea Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>StackingAreaSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackArea100Series(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfStackingArea100 Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>StackingArea100Series</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackBarSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfStackingBar Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>StackingBarSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackBarSeries3D(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfStackingBar Series3D.
            </summary>
            <param name="serie">chart serie</param>
            <returns>StackingBarSeries3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackBar100Series3D(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfStackingBar100 Series3D.
            </summary>
            <param name="serie">chart serie</param>
            <returns>StackingBar100Series3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackedColumnSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfStackingColumn Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>StackingColumnSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackedColumnSeries3D(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfStackingColumn Series3D.
            </summary>
            <param name="serie">chart serie</param>
            <returns>StackingColumnSeries3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackColum100Series(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfStackingColumn100 Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>StackingColumn100Series</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackColum100Series3D(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfStackingColumn100 Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>StackingColumn100Series</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfRadarSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfRadar Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>RadarSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfScatterrSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfScatter Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>ScatterSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfBubbleSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfBubble Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>BubbleSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfCandleSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfCandle Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>CandleSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStockHiLoSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the SfHiLo Serie.
            </summary>
            <param name="serie">chart serie</param>
            <returns>HiLoOpenCloseSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfFunnelSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the funnel Serie.
            </summary>
            <param name="serie">chart serie</param>       
            <returns>Funnel Series</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfWaterfallSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            It returns the waterfall serie of sfchart
            </summary>
            <param name="serie">xlsio chart serie</param>       
            <returns>the waterfall serie of sfchart</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetFillOnWaterFallSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.ExcelChartToImageConverter.CustomWaterfallSeries,Syncfusion.ExcelChartToImageConverter.ViewModel)">
            <summary>
            Check and adds the required color brushes for waterfall series
            </summary>
            <param name="serie">input xlsio chart series</param>
            <param name="waterfall">input sfchart waterfall series</param>
            <param name="model">input view model object</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfHistogramOrPareto(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.XlsIO.Implementation.Charts.ChartImpl,Syncfusion.UI.Xaml.Charts.LineSeries@)">
            <summary>
            Returns the histogram equivalent column series and pareto equivalent line
            </summary>
            <param name="serie">input XlsIO chart series</param>
            <param name="_chart">input XlsIO chart</param>
            <param name="paretoLine">output pareto line if pareto series</param>
            <returns>the column series of sfchart</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfParetoLine(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ColumnSeries,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            Returns the pareto line formatted sfchart line series
            </summary>
            <param name="serie">input chart serie object</param>
            <param name="column">input column series</param>
            <param name="observableCollection">the observable collection argument for pareto line</param>
            <returns>the sfchart line series</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetChartPointsForHistogram(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            Returns the required observable collection for histogram chart
            </summary>
            <param name="serie">input chart series</param>        
            <param name="observableCollection">input observable collection</param>
            <returns>the modified observable collection for histogram</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetChartPointsByBinValues(System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Double,System.Int32,System.Double,System.Double,System.Double,System.Double,Syncfusion.XlsIO.Implementation.Charts.HistogramAxisFormat)">
            <summary>
            Returns the modified observable collection respect to bin values
            </summary>
            <param name="modifiedProducts">the input modified observable collection</param>
            <param name="binwidth">the bin width value</param>
            <param name="numberOfBins">number of bins</param>
            <param name="min">minimum value</param>
            <param name="max">maximum value</param>
            <param name="overflowBin">the overflow bin value</param>
            <param name="underflowBin">the underflow bin value</param>
            <param name="axisFormat">input histogram axis format</param>
            <returns>the output modified observable collection</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.CalculateValuesFromFlowBins(System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Double,System.Double,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            returns the view model object
            </summary>
            <param name="modifiedProducts"> the modified observable collection</param>
            <param name="min">minimum value</param>
            <param name="max">maximum value</param>
            <param name="bintype">bin type to indicate underflow / overflow options
            -1 - underflow ,1 - overflow, 0 - both
            </param>
            <param name="count">bin count for axis</param>
            <param name="binWidth">the binwidth </param>
            <param name="isIntervalClosedInLeft">boolean value indicates whether the interval is closed left or not</param>
            <returns>the modified view model</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ChangeFunnelItemsSourceToRangeColumn(System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            the data points changed as funnel 
            </summary>
            <param name="data">input chart points data</param>
            <returns>the data points to represent in funnel</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetStandardDeviationValue(System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            Calculate and returns the standard deviation value
            </summary>
            <param name="array">input observation collection value</param>
            <returns>the standard deviation value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetAutomaticBinwidthValue(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate and returns the automatic bin width value as MS Excel
            </summary>
            <param name="stdev">input standard deviation value</param>
            <param name="length">chart points count</param>
            <param name="max">Maximum value</param>
            <param name="min">Minimum value</param>
            <returns>the bin width value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetAverage(System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            Calculate and return the average value from collection
            </summary>
            <param name="array">input array</param>
            <returns>the average value of array</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetViewModel(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            Check for series having reference or literal values and return view model object based on values type
            </summary>
            <param name="serie">input series need to check</param>        
            <returns>view model object</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetChartPointsValues(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,System.Boolean,System.Int32,System.Boolean,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            Get the chartpoints from the series values
            </summary>
            <param name="serie">input series</param>    
            <param name="serieBase">sfchart serie</param>
            <param name="isBubbles">boolean value denotes whether serie is bubble or not</param>
            <param name="values">input chart points to be updated</param>       
            <returns>the updated chart point collection</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetChartPointValueType(System.Boolean,System.Boolean,System.String,System.String,Syncfusion.XlsIO.Implementation.Charts.ChartImpl,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl)">
            <summary>
            Get the chart point X/Category value type based on the input values
            </summary>
            <param name="isBubbleOrScatter">boolean value indicates whether the chart is bubble or scatter</param>
            <param name="valueContainsAnyString">boolean value indicates whether the X/Category Value contain any string</param>
            <param name="labelNumFmt">cell or external range number format</param>
            <param name="axisNumFmt">axis numberformat</param>
            <param name="chart">parent chart</param>
            <param name="categoryAxis">category axis</param>
            <returns>teh chart point value type enum value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ValuesContainsAnyString(Syncfusion.XlsIO.IRange,System.Object[],System.Collections.Generic.List{System.Int32},Syncfusion.XlsIO.Implementation.WorksheetImpl)">
            <summary>
            Returns the boolean value by checking whether the cells or direct values contain any string
            </summary>
            <param name="categoryRanges">input category cells</param>
            <param name="directCategories">input direct category values</param>
            <param name="categoryIndexesArray">array denotes the category need to be skipped</param>
            <param name="worksheet">parent worksheet</param>
            <returns>the boolean value indicates whether the input contains string</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetValueFromCell(Syncfusion.XlsIO.IRange,System.Object,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.Int32,Syncfusion.ExcelChartToImageConverter.ChartPointValueType,System.String,System.String,System.Double,System.Boolean,System.Object@,System.String)">
            <summary>
            Returns the category value based on the input
            </summary>
            <param name="cell">input cell</param>
            <param name="categoryValue">input value</param>
            <param name="sheet">parent worksheet</param>
            <param name="index">current index</param>
            <param name="expectedType">the chart point value type expected for category</param>
            <param name="axisNumberFormat">axis NumberFormat</param>
            <param name="labelNumberFormat">cell/external range NumberFormat</param>
            <param name="categoryDisplayUnit">category axis display unit</param>
            <param name="isCategoryLabelsNeeded">boolean value indicates whether the data labels required for category</param>
            <param name="dataLabelResult">data label result value for category</param>
            <param name="dataLabelNumberFormat">dataLabel NumberFormat</param>
            <returns>the expected category value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetdoubleValueFromCell(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.Implementation.WorksheetImpl,Syncfusion.XlsIO.Implementation.WorksheetImpl.TRangeValueType@)">
            <summary>
            Get the double value from the cell
            </summary>
            <param name="cell">input range</param>
            <param name="sheet">parent worksheet</param>
            <param name="cellType">out cell value type</param>
            <returns>the double value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SetDateTimeIntervalType(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Boolean)">
            <summary>
            Check and Sort the collection if X is datetime value
            </summary>
            <param name="serie">input chart serie</param>
            <param name="chartPoints">chartpoint collection</param>
            <param name="isStock">boolean value indicates whether the charts are stock or not</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetChartPointsValuesForStockChart(System.Boolean,Syncfusion.XlsIO.Implementation.Charts.ChartImpl,Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Boolean)">
            <summary>
            Get the chartpoints from the series values only for stock chart
            </summary>
            <param name="chart">XlsIO chart</param>        
            <param name="serie">input series</param>       
            <param name="values">input chart points to be updated</param>
            <param name="isCandleChart">boolean value represent the candle chart</param>
            <returns>the updated chart point collection</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetValueForStockCharts(Syncfusion.XlsIO.IRange,System.Object[],Syncfusion.XlsIO.Implementation.WorksheetImpl,System.Int32,System.Double)">
            <summary>
            Returns the value for stock chart serie
            </summary>
            <param name="range">input range</param>
            <param name="directValues">input direct values</param>
            <param name="worksheet">parent worksheet</param>
            <param name="index">current index</param>
            <param name="displayUnit">display unit</param>
            <returns>teh double value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetFillOnCommonSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Assign the brush values for the common chart series
            like (Bar,column,Area(stacked or 100%stacked or clustered)),Bubble,
            </summary>
            <param name="serie">input Chart series</param>
            <param name="sfChartSerie">the ouput SfChart Serie object to be changed</param>
            <param name="negativeIndexes">negative indexes by values</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.TryParseNegativeIndexes(System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Gets the index of negative values serie data points. 
            </summary>
            <param name="items">Items to be checked</param>
            <param name="listIndexes">Index collection.</param>
            <returns>returns true if serie data points has negative value otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetFillOnPieDougnutSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Boolean,Windows.UI.Xaml.Media.Brush@,System.Double@)">
            <summary>
            Assign the brush values for the pie and doughnut chart series
            </summary>
            <param name="serie">input Chart series</param>
            <param name="sfChartSerie">the ouput SfChart Serie object to be changed</param>
            <param name="isPie">Indicates whether the input serie is pie or doughnut</param>
            <param name="borderBrush">Get the border brush set on individual data point</param>
            <param name="borderThickness">Get the border thickness set on individual data point</param>
            <returns>the boolean value indicates whether the all datapoints have no fill</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetBorderOnCommonSeries(Syncfusion.XlsIO.Implementation.Charts.ChartBorderImpl,Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Get the border thickness and color value from input border
            Set the values to the output serie
            </summary>
            <param name="border">the input series border</param>
            <param name="sfChartSerie">the ouput series to be changed</param>
            <returns>the boolean value indicates whether the default border is applied</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetBorderOnLineSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeries)">
             <summary>
             Get the border thickness and color value from input border
             Set the values to the output serie
             </summary>
            <param name="serie">Input series</param>
             <param name="sfChartSerie">the ouput series to be changed</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.TryAndUpdateSegmentsColorsInLineSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeries,Windows.UI.Xaml.Media.Brush,System.Boolean)">
            <summary>
            Update the line series by segments if is vary color option is set
            </summary>
            <param name="serie">input xlsio/officechart serie object</param>
            <param name="sfChartSerie">input sfchart serie object</param>
            <param name="brush">common brush for the serie</param>
            <param name="isXMLVersion">boolean value indicates whether the chart is in XML file</param>
            <returns>the boolean value indicates whether the segment colors are changed</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetChartLegendIcon(Syncfusion.XlsIO.Implementation.Charts.ChartSerieDataFormatImpl,System.Int32)">
            <summary>
            Return the approximate legend icon for the chart serie
            </summary>
            <param name="dataFormat">Input serie Data format</param>
            <param name="serieIndex">integer value for auto marker type</param>
            <returns>the approimate chart legend icon value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ChartSeriesCommon(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Boolean,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Common chart series settings.
            </summary>
            <param name="serie">XlsIo serie.</param>
            <param name="chartSeriesBase">SfChart series base</param>        
            <param name="values">Chart data points.</param>
            <param name="applyFill">Apply series fill settings</param>
            <param name="negativeIndexes">negative indexes by values</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.TryAndRemoveFirstEmptyPointsOnSeries(System.Boolean,Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            skip the first Empty Points
            </summary>
            <param name="isLine">Set true if it is line</param>
            <param name="serie">chart serie</param>
            <param name="chartSeriesBase">chart series base</param>
            <param name="values">values from chartpoint collections</param>
            <returns>Returns the chartpoint value collection</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.TryAnsEmptyPointDisplayInChart(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Check and set the blank value based on input
            </summary>
            <param name="serie">input chart serie</param>
            <param name="chartSeriesBase">sfchart serie base</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ChartSeriesCommon(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Common chart series settings.
            </summary>
            <param name="serie">XlsIo serie.</param>
            <param name="chartSeriesBase">SfChart series base</param>        
            <param name="values">Chart data points.</param>
            <param name="negativeIndexes">negative indexes by values</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ChartSeriesCommon(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Common chart series settings.
            </summary>
            <param name="serie">XlsIo serie.</param>
            <param name="chartSeriesBase">SfChart series base</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ChartSeriesCommon(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Boolean)">
            <summary>
            Common chart series settings.
            </summary>
            <param name="serie">XlsIo serie.</param>
            <param name="chartSeriesBase">SfChart series base</param>
            <param name="applyFill">Apply series fill settings</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ChartSeriesCommon(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Common chart series settings.
            Stacked and Stacked100 Bar and column series
            </summary>
            <param name="serie">XlsIo serie.</param>
            <param name="chartSeriesBase">SfChart series base</param>
            <param name="negativeIndexes">negative indexes by values</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.DetachEventsForRadarAxes(Syncfusion.UI.Xaml.Charts.SfChart)">
            <summary>
            Detach the attached events when the chart is Radar
            </summary>
            <param name="sfChart">input sfChart object</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.TryAndSortLegendItems(Syncfusion.UI.Xaml.Charts.ChartBase,System.Int32[])">
            <summary>
            Sort the legend items based on the input array indices
            </summary>
            <param name="sfChart">input sfchart object</param>
            <param name="sortedLegendOrders">the input array indices</param>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ChartSeriesFactory">
            <summary>
            Create sf chart series based on type.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartSeriesFactory.CreateSeries(System.Type)">
            <summary>
            Create sf chart series.
            </summary>
            <param name="type">SfChart series type.</param>
            <returns>Returns sf chart series instance.</returns>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ChartPointValueType">
            <summary>
            Enum values used for axis number format and type detection
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartPointValueType.ScatterXAxisValue">
            <summary>
            Scatter X axis values
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartPointValueType.ScatterDefaultIndexXValue">
            <summary>
            Scatter default index value
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartPointValueType.DefaultIndexValue">
            <summary>
            Default index value
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartPointValueType.DefaultIndexValueWithAxisNumFmt">
            <summary>
            Default index value with axis number format
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartPointValueType.DefaultIndexValueWithNumFmt">
            <summary>
            Default index value with source number format
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartPointValueType.DateTimeAxisValue">
            <summary>
            Date Time X axis value
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartPointValueType.TextAxisValue">
            <summary>
            Text axis Value
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartPointValueType.TextAxisValueWithNumFmt">
            <summary>
            Text axis value with axis number format
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ThemeColorNameEnum">
            <summary>
            Enum having the equivalent theme color with the integer indexes
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum">
            <summary>
            Enum values for the chart elements and required content
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.AxisLine">
            <summary>
            Axis Line color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.ChartAreaLine">
            <summary>
            Chart area border color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.ChartAreaFill">
            <summary>
            Chart area fill color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.UpBarFill">
            <summary>
            Up Bar fill color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.UpBarLine">
            <summary>
            Up Bar border color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.DownBarFill">
            <summary>
            Down bar fill color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.DownBarLine">
            <summary>
            Down bar border color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.DataPointFill">
            <summary>
            Data Point or Serie fill color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.DataPointLine">
            <summary>
            Data point or serie border color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.FloorLine">
            <summary>
            Floor border color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.FloorFill">
            <summary>
            Floor fill color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.WallsFill">
            <summary>
            Walls fill color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.DataPointLineThickness">
            <summary>
            Line/Scatter serie line thickness
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.MinorGridLines">
            <summary>
            Minor grid line color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.MajorGridLines">
            <summary>
            Major grid line color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.PlotAreaFill">
            <summary>
            Plot area fill color only for 2D
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.MarkerFill">
            <summary>
            Marker fill color 
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.MarkerThickness">
            <summary>
            Marker size
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartElementsEnum.OtherLines">
            <summary>
            Trendlines/hi-lo lines or other lines in the serie
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.NamespaceDoc">
            <summary>
            The Syncfusion.ExcelChartToImageConverter namespace contains classes for converting Excel charts into image.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter">
            <summary>
            Excel Chart To Image Converter.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter._chart">
            <summary>
            To assign the input chart
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.m_scalingMode">
            <summary>
            Represent the quality of Image
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.ScalingMode">
            <summary>
            It's represent the chart image Scaling 
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.Is3DConversionSupported">
            <summary>
            Check whether the chart type is 3D conversion supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.GetChart(Syncfusion.XlsIO.IChart)">
            <summary>
            Excel chart to sf Chart conversion.
            </summary>
            <param name="excelChart">Excel chart</param>
            <returns>SfChart</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.IsAutoChartTitle(Syncfusion.XlsIO.Implementation.Charts.ChartImpl)">
            <summary>
            Boolean value indicates whether the chart have automatic title. 
            XlsIO specific as behavior is differs with Presentation Chart
            </summary>
            <param name="chartImpl">input chart</param>
            <returns>the boolean value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.TryAndSetMarginSpace(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.XlsIO.Implementation.Charts.ChartImpl,System.Collections.Generic.List{Syncfusion.XlsIO.IChartSerie},Syncfusion.UI.Xaml.Charts.ChartLegend)">
            <summary>
            Set the margin space by adding legend in the cropped region in the sfchart
            </summary>
            <param name="sfChart">input sfchart</param>
            <param name="chartImpl">input xlsio/office chart</param>
            <param name="listSeries">input list of series</param>
            <param name="legend">the legend added in the sfchart</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.TryAndSetPlotAreaSize(Syncfusion.XlsIO.Implementation.Charts.ChartImpl,System.Boolean@)">
            <summary>
            Check and returns the plot area margins based on the input values
            </summary>
            <param name="chartImpl">input Xlsio/Office chart chart object</param>
            <param name="isInnerLayoutTarget">boolean value indicates whether the layout is inner</param>
            <returns>the calculated manual rectangle layout of plot area</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.TryCloneSecondaryAxes(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Clone the formatttings for the chart for hidden secondary axis
            </summary>
            <param name="sfChart">input sfchart</param>
            <param name="xAxis">secondary x axis</param>
            <param name="yAxis">secondary y axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.ResetChartCommonData">
            <summary>
            Reset the chart converter properties
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.GetEmptyLineStyle(Windows.UI.Xaml.Media.Brush@)">
            <summary>
            Returns the empty linestyle for axis
            </summary>
            <param name="brush">output brush</param>
            <returns>the invisible line style</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.SetAxisReplacement(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.XlsIO.IChart,System.Boolean@)">
            <summary>
            Check For any need of axis replacement respect to its values
            </summary>
            <param name="sfChart">input sfchart object</param>
            <param name="chart">input xlsio / office chart object</param>
            <param name="isChanged">boolean value indicates whether axis replaced</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.AddTickMarks(Syncfusion.UI.Xaml.Charts.SfChart,System.Double,System.Double,System.Int32,Windows.UI.Xaml.Media.Brush,System.Double,System.Boolean)">
            <summary>
            Add the line annotation like major and minor tick mark in the chart
            </summary>
            <param name="sfChart">input sfchart</param>
            <param name="topValue">Y1 position value</param>
            <param name="bottomValue">Y2 position value</param>
            <param name="interval">Interval between tickmarks</param>
            <param name="axisLineColor">color of tick marks</param>
            <param name="thickness">thickness of tickmark</param>
            <param name="isMajor">boolean value indicates whether tick mark is major or minor</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.GetChart3D(Syncfusion.XlsIO.IChart)">
            <summary>
            Converts an Excel Chart instance into Syncfusion 3D Chart instance.
            </summary>
            <param name="excelChart">Excel chart</param>
            <returns>SfChart3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.GetChartSerie(Syncfusion.XlsIO.ExcelChartType,Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean)">
            <summary>
            Get Sf chart serie for Excel Chart serie
            </summary>
            <param name="serieType">Represent the Series Type</param>
            <param name="sfChart">Sfchart</param>
            <param name="serie">Excel Serie</param>
            <param name="isPie">ispie boolean for piechart</param>
            <param name="isStock">isstock boolean for stockchart</param>
            <param name="isRadar">boolean value indicates whether the chart contains radar serie</param>
            <param name="isNullSerie">boolean value indicates whether series contains the null values or not</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.SetEmptySeriesValues(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            Set the empty values to the chart series and the series name
            </summary>
            <param name="sfChartSerie">input Sfchart serie</param>
            <param name="chartSerieImpl">input xlsio chart serie</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.GetChartSerie3D(Syncfusion.XlsIO.ExcelChartType,Syncfusion.UI.Xaml.Charts.SfChart3D,Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,System.Boolean@,System.Boolean@,System.Boolean)">
            <summary>
            Get Sf chart serie for Excel Chart serie
            </summary>
            <param name="serieType">Represent the Series Type</param>
            <param name="sfChart">Sfchart</param>
            <param name="serie">Excel Serie</param>
            <param name="isPie">ispie boolean for piechart</param>
            <param name="isStock">isstock boolean for stockchart</param>
            <param name="isNullSerie">boolean value indicates whether the series is empty or not</param>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ViewModel">
            <summary>
            It's an chart data source. Collection of datapoint's.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ViewModel.GetXorYValuesAsString(System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Boolean,System.Boolean)">
            <summary>
            Get the x or y value from chart points
            </summary>
            <param name="points">Represents a dynamic chart point collection</param>
            <param name="isX">if it's true get the x value otherwise get y value</param>
            <param name="isNaturalLog">If it's true get the math.log value, otherwise get the chartpoint value </param>
            <returns>x or y value as string</returns>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ChartPoint">
            <summary>
            It's represent the chart datapoint.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartPoint.X">
            <summary>
            axis values will be stored
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartPoint.Value">
            <summary>
            series values will be stored
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartPoint.Size">
            <summary>
            bubble size values will be stored
            </summary>
            <remarks>
            Used to store the data labels value with number format
            for category axis when axis is not linked to source (only for stock charts).
            </remarks>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartPoint.High">
            <summary>
            stock high values will be stored
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartPoint.Low">
            <summary>
            stock low values will be stored
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartPoint.Open">
            <summary>
            stock open values will be stored
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartPoint.Close">
            <summary>
            stock close values will be stored
            </summary>
            <remarks>
            Used to store the data labels value with number format
            for category axis when axis is not linked to source (except stock charts).
            </remarks>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartPoint.IsSummary">
            <summary>
             boolean value for waterfall will be stored
            </summary>
            <remarks>Used to show the data labels and markers to be removed on data point 
            is an average on line/radar/scatter charts.
            </remarks>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartPoint.SegmentBrush">
            <summary>
            Brush value stores the various color for the line/spline/bubble chart series
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.TrendLineBorder">
            <summary>
            Represent the trendline border class
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.TrendLineBorder.m_layout">
            <summary>
            Represent the layout rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.TrendLineBorder.m_border">
            <summary>
            Represent the border class
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.TrendLineBorder.m_manualLayout">
            <summary>
            True if manual layout is applied from trendline, otherwise false.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.TrendLineBorder.Border">
             <summary>
            Gets and sets the border class object.
             </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.TrendLineBorder.TrendLineLayout">
            <summary>
            Gets and sets the trendline layout
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.TrendLineBorder.isManualLayout">
            <summary>
            True if manualy layout is applied from the trendline, otherwise false.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.TrendLineBorder.TrendLineBorderAndLayout(Syncfusion.XlsIO.Implementation.Charts.ChartTrendLineImpl,Windows.Foundation.Rect@,Windows.UI.Xaml.Controls.TextBlock,Syncfusion.ExcelChartToImageConverter.ChartCommon,System.Boolean)">
            <summary>
            Get the trendline borders and layouts
            </summary>
            <param name="trendLineImpl">ChartTrendlineImpl class object</param>
            <param name="manualRect">manual layout rectangle</param>
            <param name="block">TextBlock</param>
            <param name="chartCommon">charCommon class object</param>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ChartCommon">
            <summary>
            It's assign the Excel Chart properties to SfChart.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.m_sfChart">
            <summary>
            Represent the SfChart.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.m_isAxisLine">
            <summary>
            True axis line format are set the sfchart, otherwise hidden the axis line.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.m_isLabel">
            <summary>
            True the category label is hidden, otherwise show the category label. 
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.m_hasNewSeries">
            <summary>
            True the new line series is create and add to collection, otherwise false
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.m_newSeriesIndex">
            <summary>
            Represent the new lineseries add the series collection index.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.m_itemSource">
            <summary>
            Represent the series ItemSource.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.m_isDateTimeCategoryAxis">
            <summary>
            Represent the DateTime category axis.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.m_TextToMeasure">
            <summary>
            Text area collection to be used for measurement of the inidividual axis labels
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartCommon.HasNewSeries">
            <summary>
            Gets and sets the new line series add the collection or not.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartCommon.NewSeriesIndex">
            <summary>
            Gets and sets the new line series add the collection index.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsCategoryLabel">
            <summary>
            Represents indicating the Category Label is preserved or not.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsCategoryAxisLine">
            <summary>
            Represents indicating the CategoryAxisLine is preserved or not.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartCommon.ItemSource">
            <summary>
            Gets and sets the item source for series.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfChart">
            <summary>
            Gets and sets the SfChart.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsDateTimeCategoryAxis">
            <summary>
            Represent the indicating the category axis label is dateTime or not.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.DEF_BORDER_WIDTH_EXCEL">
            <summary>
            Border width constant in MS EXCEL
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.parentWorkbook">
            <summary>
            Parent workbook internal object
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.m_def_MarkerType_Array">
            <summary>
            Represents the marker type value in integer
            from enum ExcelChartType (XlsIO) and OfficeChartType (OfficeChart)
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.DEF_LINE_THICKNESS_XML">
            <summary>
            Represents the default line thickness in XML workbook
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.DEF_LINE_THICKNESS_BINARY">
            <summary>
            Represents the default line thickness in Binary workbook
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.engine">
            <summary>
            Excel engine.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartCommon.Worksheet">
            <summary>
            Worksheet used for number format
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.#ctor">
            <summary>
            Constructor initialize the worksheet
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetChartSize(Syncfusion.XlsIO.IChart)">
            <summary>
            Set the chart size.
            </summary>
            <param name="_chart">input chart</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.ApplyNumberFormat(System.Object,System.String)">
            <summary>
            Apply a number format to value.
            </summary>
            <param name="value">Value.</param>
            <param name="numberFormat">number format to be applied</param>
            <returns>returns numberformat applied string.</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfNumericalAxisCommon(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,System.Boolean)">
            <summary>
            It's assign the Excel chart numerical axis settings to Sf chart Axis
            </summary>
            <param name="sfaxis">SfAxis3D</param>
            <param name="serieValAxis">XlsIO value axis</param>
            <param name="oppositeAxis">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.CreateNewLineSeries(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
             Create the new line series and add to the collection.
            </summary>
            <param name="sfaxis">Sf numerical axis</param>
            <param name="serieValAxis">XlsIO value axis</param>
            <param name="oppositeAxis">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsCategoryAxisAuto(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Indicates whether the axis is category and it is not automatic
            </summary>
            <param name="axis">input axis</param>
            <returns>the boolean value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsStacked100AxisFormat(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Returns the boolean value indicates axis format is depends on the stacked 100 format
            </summary>
            <param name="axis">input chart object</param>
            <returns>the boolean value shows is stacked 100 format</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetSourceNumberFormat(Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
            Get the referenced (first series and first cell) number format from axis
            </summary>
            <param name="axis">input axis</param>
            <returns>the referenced numberformat</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.TryAndGetFirstCellNumberFormat(Syncfusion.XlsIO.IRange)">
            <summary>
            Identify the first visible cell from the input range and return the cell's numberformat
            </summary>
            <param name="range">input range</param>
            <returns>the numberformat</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.CheckIfValidValueRange(Syncfusion.XlsIO.IRange)">
            <summary>
            Cehck whether the range is valid (not null and not refers external range)
            </summary>
            <param name="range">input range</param>
            <returns>the boolean value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsRowOrColumnIsHidden(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.Implementation.WorksheetImpl)">
            <summary>
            Ceheck whether the range's row is hidden or not
            </summary>
            <param name="valueCell">the input value cell</param>
            <param name="workSheet">parent worksheet</param>
            <returns>the boolean value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfNumericalAxis(Syncfusion.UI.Xaml.Charts.NumericalAxis,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,System.Boolean)">
            <summary>
            It's assign the Excel chart numerical axis 2D settings to Sf chart Axis 2D
            </summary>
            <param name="sfaxis">SfAxis</param>
            <param name="xlsiovalue">XlsIO value axis</param>
            <param name="categoryAxis">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetDisplayUnitValue(Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
             <summary>
             Gets the dispaly unit numerical value.
             </summary>        
            <param name="valueAxis">Input chart value axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfNumericalAxis3D(Syncfusion.UI.Xaml.Charts.NumericalAxis3D,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl)">
            <summary>
            It's assign the Excel chart numerical axis 3D settings to Sf chart Axis 3D
            </summary>
            <param name="sfaxis">SfAxis3D</param>
            <param name="xlsiovalue">XlsIO value axis</param>
            <param name="categoryAxis">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.NumericalAxisBoundChanged(System.Object,Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs)">
            <summary>
            Method triggered when the numerical axis bound changed 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfGridLines(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            It's assign the Excel chart axis gridline settings to Sf chart axis gridline
            </summary>
            <param name="xlsioAxis">XlsIO axis.</param>
            <param name="sfAxis">Sf axis.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfCategoryAxisCommon(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,System.Boolean)">
             <summary>
             It's assign the Excel chart category axis settings to Sf chart Axis
             </summary>
            <param name="sfCatAxis">Sfchart category axis</param>
            <param name="xlsioCatAxis">XlsIO category axis</param>
            <param name="xlsioValAxis">XlsIO Value axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsBarChartAxis(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl)">
             <summary>
             Check the bar chart axis or not.
             </summary>
            <param name="chartAxisImpl">Sfchart category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.CreateNewLineSeries(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
             <summary>
             Create the new line series and add to the collection.
             </summary>
            <param name="sfCatAxis">Sfchart category axis</param>
            <param name="xlsioCatAxis">XlsIO category axis</param>
            <param name="xlsioValAxis">XlsIO Value axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfCategoryAxis(Syncfusion.UI.Xaml.Charts.CategoryAxis,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,System.Boolean)">
            <summary>
            It's assign the Excel chart category axis settings to Sf chart Axis
            </summary>
            <param name="categoryAxis">SfChart category axis</param>
            <param name="xlsioCatAxis">XlsIO category axis</param>
            <param name="xlsioValAxis">XlsIO value axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfCategoryAxis3D(Syncfusion.UI.Xaml.Charts.CategoryAxis3D,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
            It's assign the Excel chart category axis settings to Sf chart Axis
            </summary>
            <param name="categoryAxis">SfChart category axis</param>
            <param name="xlsioCatAxis">XlsIO category axis</param>
            <param name="xlsioValAxis">XlsIO value axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.OnAxisLabelCreated(System.Object,Syncfusion.UI.Xaml.Charts.LabelCreatedEventArgs)">
            <summary>
            Invoked after axis label crated.
            </summary>
            <param name="sender">Chart axis.</param>
            <param name="labelCreatedEventArgs">Chart label args.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.CategoryAxis_AxisBoundsChanged(System.Object,Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs)">
            <summary>
            Event method called on Category/DateTime Axis bounds are changed
            </summary>
            <param name="sender">the sender axis object</param>
            <param name="e">Axisbounds changed event arguments</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.PositioningLabelsOnAxisLabels(System.Object,Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs)">
            <summary>
            Position the axis labels when the between ticks set
            </summary>
            <param name="sender">input axis object</param>
            <param name="e">the eventargs</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfLogerthmicAxisCommon(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl)">
            <summary>
            It's assign the Excel chart Logerthmi axis settings to Sf chart Axis
            </summary>
            <param name="sfaxis">Sf axis</param>
            <param name="xlsiovalue">XlsIO value axis</param>
            <param name="xlsiocat">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfLogerthmicAxis(Syncfusion.UI.Xaml.Charts.LogarithmicAxis,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl)">
            <summary>
            It's assign the Excel chart Logerthmi axis settings to Sf chart Axis
            </summary>
            <param name="sfaxis">Sf axis</param>
            <param name="xlsiovalue">XlsIO value axis</param>
            <param name="xlsiocat">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfLogerthmicAxis3D(Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl)">
            <summary>
            It's assign the Excel chart Logerthmi axis settings to Sf chart Axis
            </summary>
            <param name="sfaxis">Sf axis</param>
            <param name="xlsiovalue">XlsIO value axis</param>
            <param name="xlsiocat">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfDateTimeAxis(Syncfusion.UI.Xaml.Charts.DateTimeAxis,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,System.Boolean)">
            <summary>
            It's assign the Excel chart DateTime axis settings to Sf chart Axis
            </summary>
            <param name="sfDateTimeAxis">Sf axis</param>
            <param name="xlsioCatAxis">XlsIO value axis</param>
            <param name="xlsioValAxis">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfDateTimeAxis3D(Syncfusion.UI.Xaml.Charts.DateTimeAxis3D,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
            It's assign the Excel chart DateTime3D axis settings to Sf chart Axis
            </summary>
            <param name="sfDateTimeAxis">Sf axis</param>
            <param name="xlsioCatAxis">XlsIO value axis</param>
            <param name="xlsioValAxis">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfTickLines(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            It's assign the Excel chart axis tick line settings to Sf chart axis tick line
            </summary>
            <param name="xlsioAxis"></param>
            <param name="sfAxis"></param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetSfAxisTitle(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl,Windows.Foundation.Rect@,System.Boolean@)">
            <summary>
            It's assign the Excel chart AxisTitle settings to Sf chart AxisTitle
            </summary>       
            <param name="axis">xlsio/office chart axis</param>
            <param name="isChartEx">boolean value indicates whether the chart is Excel 2016 type</param>
            <returns>the axis title border</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetAxisLayoutTransformForTitle(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl,System.Boolean@)">
            <summary>
            Get the rotation angle from the axis and returns proper transform
            </summary>
            <param name="axis">Input Chart Axis</param>
            <returns>the rotation angle</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsVerticalAxis(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Check whether the axis is vertical or not 
            </summary>
            <param name="axis">axis to be checked</param>
            <returns>the boolean value, is vertical or not</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsVerticalCategoryAxis(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Returns the boolean value indicates axis format is vertical
            </summary>
            <param name="axis">input chart axis object</param>
            <returns>the boolean value shows is vertical</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfLegend(Syncfusion.UI.Xaml.Charts.ChartBase,Syncfusion.XlsIO.Implementation.Charts.ChartImpl,System.Int32[]@,System.Boolean,Syncfusion.UI.Xaml.Charts.ChartLegend@)">
            <summary>
            It's assign Sf chart Legend settings
            </summary>
            <param name="sfchart">SfChart</param>
            <param name="xlsioChart">Excel Chart</param>
            <param name="sortedLegendOrders">output array represents the legend items to be ordered</param>
            <param name="emptyLegend">Returns the empty legend for spacing if legend manual and outside</param>
            <param name="isPlotAreaManual">boolean value indicates wheter the plot area is manual</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetLegendItemsOnCategories(Syncfusion.UI.Xaml.Charts.ChartBase,System.Boolean)">
            <summary>
            Split Legend Items based on Categories if single series is with isvarycolor option is set or doughnut series is came.
            </summary>
            <param name="sfchart">input sfchart object</param>
            <param name="isDoughnut">boolean value denotes whether the series is doughnut</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.CalculateLegendSize(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.UI.Xaml.Charts.SfChart3D,Windows.UI.Xaml.Controls.TextBlock,System.Double@,System.Double@,System.Double@,System.Int32@)">
            <summary>
            Calculate the legend width values from the input sfchart object
            </summary>
            <param name="sfChart2D">input sfchart 2D Object</param>
            <param name="sfChart3D">input sfchart 3D Object</param>
            <param name="block">the temporary text block used to measure the text</param>
            <param name="serieWidth">the serie text width</param>
            <param name="totalWidth">the total text width</param>
            <param name="serieHeight">maximum serie text height</param>
            <param name="totalCount">Total legend entry count</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetLegendPosition(Syncfusion.XlsIO.IChart,Syncfusion.UI.Xaml.Charts.ChartLegend)">
            <summary>
            Set the legend position based on the input chart object
            </summary>
            <param name="xlsioChart">input chart object</param>
            <param name="leg">the SfChart legend object</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetOrderOfLegendItems(Syncfusion.UI.Xaml.Charts.ChartBase,Syncfusion.XlsIO.IChart,Syncfusion.UI.Xaml.Charts.ChartLegend)">
            <summary>
            Returns the array of legend item's indexes as equivalent to MS
            </summary>
            <param name="sfchart">input sfchart</param>
            <param name="chart">input XlsIO/Office Chart</param>
            <param name="legend">input sfchart legend items</param>
            <returns>the modified array legened item indexes</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.UpdateOrderArray(System.Collections.Generic.IList{Syncfusion.UI.Xaml.Charts.ChartSeriesBase},Syncfusion.UI.Xaml.Charts.ChartBase,System.Int32,System.Int32@,System.Int32[])">
            <summary>
            Update the array of legend items indexes
            </summary>
            <param name="seriesList">input series list</param>
            <param name="sfchart">input sfchart</param>
            <param name="i">input index value</param>
            <param name="index">output index value</param>
            <param name="orderResult">the order of indexes modified</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.CalculateManualLayout(Syncfusion.XlsIO.Implementation.Charts.ChartManualLayoutImpl,System.Boolean@,System.Boolean)">
            <summary>
            Calculate the manual layout rectangle value based from the input chart element object
            </summary>
            <param name="layoutImpl">input layoutimpl object</param>
            <param name="isInnerLayout">boolean value indicates whether the plot area layout target is inner.</param>
            <returns>the caluclated manual rectangle value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.TryAndUpdateLegendItemsInWaterFall(Syncfusion.UI.Xaml.Charts.ChartBase,Syncfusion.XlsIO.IChart)">
            <summary>
            Update the funnel chart legend 
            </summary>
            <param name="sfchart">input sfchart</param>
            <param name="xlsioChart">input XlsIO chart</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfTextBlock(Windows.UI.Xaml.Controls.TextBlock,Syncfusion.XlsIO.Implementation.Charts.ChartTextAreaImpl)">
            <summary>
            It's used assign the XlsIo textarea properties to sf TextBlock
            </summary>
            <param name="sfTextArea">Wpf TextBlock</param>
            <param name="textArea">Xlsio Text Area</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetTransformAndBackGround(Windows.UI.Xaml.Controls.Border,Syncfusion.XlsIO.Implementation.Charts.ChartTextAreaImpl,Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Set the transform and the backgound color for text block
            </summary>
            <param name="sfTextArea">The WPF border object</param>
            <param name="textArea">The Chart textArea object</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfChartTitle(Syncfusion.XlsIO.IChart,Windows.Foundation.Rect@)">
            <summary>
            It's assign the SfChart AxisTitle properties
            </summary>
            <param name="sfchart">sfChart</param>
            <param name="xlsioChart">Xlsio Chart</param>
            <returns>The calculated WPF border object</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetTextFromRange(System.String,System.String[])">
            <summary>
            Returns the range from the range address text
            </summary>
            <param name="address">the range address</param>
            <param name="cache">the string array</param>
            <returns>the range</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfChartDataLabel(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            It's assign the chart data label property
            </summary>
            <param name="serie">chart serie</param>
            <param name="sfChartSeries">Sfchart serie base object</param>
            <returns>sfChart DataLabel</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetMarkerFormattings(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,System.Collections.Generic.List{System.Int32},Syncfusion.XlsIO.Implementation.Charts.ChartSerieDataFormatImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)">
            <summary>
            Set Marker format on Chart adornment from Chart data format
            </summary>
            <param name="chartSerieImpl">input chart series object</param>
            <param name="dataFormat">input chart series data format</param>
            <param name="averageIndexes">the indexes of the chart points need to set invisible</param>
            <param name="info">the sfchart adornment info</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetMarkerSettings(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.XlsIO.Implementation.Charts.ChartSerieDataFormatImpl,Syncfusion.ExcelChartToImageConverter.MarkerSetting,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get the Marker settings from the marker format of Office Chart
            </summary>
            <param name="chartSerieImpl">Parent chart series</param>
            <param name="dataFormat">Data format of marker</param>
            <param name="parentMarkerSttings">Parent marker settings - series common</param>
            <returns>the marker settings for binding</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsVaryColorSupported(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            Check whether the series is single and its vary colors by point option is set to true
            </summary>
            <param name="serie">input chart serie</param>
            <returns>the boolean value indicates whether the serie supports is vary color</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetLabelPosition(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase,Syncfusion.XlsIO.Implementation.Charts.ChartDataLabelsImpl)">
            <summary>
            Set sf chart data label position.
            </summary>
            <param name="sfChartSeries">SfChart serie.</param>
            <param name="info">SfChart data label.</param>
            <param name="label">XlsIO data label.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfColor(System.Byte,System.Byte,System.Byte,System.Double)">
            <summary>
            Calculates the color from given rgb and transparency value
            </summary>
            <param name="R">input Red value</param>
            <param name="G">input Green value</param>
            <param name="B">input Blue value</param>
            <param name="transparency">input Transparency value</param>
            <returns>the output color</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfColor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Calculates the color from given rgb value
            </summary>
            <param name="R">input Red value</param>
            <param name="G">input Green value</param>
            <param name="B">input Blue value</param>        
            <returns>the output color</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfColor(Windows.UI.Color)">
            <summary>
            It's convert the drawing color to Media color
            </summary>
            <param name="chartcolor">Drawing color</param>
            <returns>Media color</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfPloatArea(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.XlsIO.Implementation.Charts.ChartFrameFormatImpl,Syncfusion.XlsIO.Implementation.Charts.ChartImpl)">
            <summary>
            It's assign the chart plotArea settings
            </summary>
            <param name="sfChart">sfChart</param>        
            <param name="chartArea">XlsiO chartArea</param>
            <param name="chartType">chart type of the input chart</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfChartArea(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.XlsIO.Implementation.Charts.ChartFrameFormatImpl,Syncfusion.XlsIO.Implementation.Charts.ChartImpl)">
            <summary>
            It's assign the chartAre settings
            </summary>
            <param name="sfChart">sfChart</param>
            <param name="chartArea">XlsiO chartArea</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfChartArea3D(Syncfusion.UI.Xaml.Charts.SfChart3D,Syncfusion.XlsIO.Implementation.Charts.ChartFrameFormatImpl,Syncfusion.XlsIO.Implementation.Charts.ChartImpl)">
            <summary>
            It's assign the chartAre settings
            </summary>
            <param name="sfChart">sfChart</param>
            <param name="chartArea">XlsiO chartArea</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsLine(Syncfusion.XlsIO.ExcelChartType)">
            <summary>
            Checks whether the given chart type is line or not
            </summary>
            <param name="chartType">Chart Type</param>
            <returns>boolean value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfChartTrendLine(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.CartesianSeries)">
            <summary>
            Add the trendlines to sfserie.
            </summary>
            <param name="serieImpl">XlsIO serie.</param>
            <param name="sfSerie">SfSerie.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.TrendlineTextAndFormat(Syncfusion.UI.Xaml.Charts.Trendline,Syncfusion.XlsIO.Implementation.Charts.ChartTrendLineImpl,System.Boolean)">
            <summary>
            Set the trendline text and format and add to collection
            </summary>
            <param name="sfTrendline">SfTrendline object</param>
            <param name="trendLineImpl">charTrendLineImpl object</param>
            <param name="isDefaultText">If it's true add the default text to textblock, otherwise custom text add to textblock</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfSecondaryAxis(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.XlsIO.Implementation.Charts.ChartImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Set SfChart secondary axis settings.
            </summary>
            <param name="xlsioSerie">XlsIO serie.</param>
            <param name="xlsioChart">XlsIO chart.</param>
            <param name="chartSerie">SfChart serie.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfSecondaryAxisCommon(Syncfusion.XlsIO.IChart,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,Syncfusion.UI.Xaml.Charts.RangeAxisBase)">
            <summary>
            Set SfChart secondary axis common settings.
            </summary>
            <param name="xlsioChart">XlsIO chart.</param>
            <param name="sfXAxis">SfCategory axis.</param>
            <param name="sfYAxis">SfNumeric axis.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetSerieName(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            Get series name.
            </summary>
            <param name="serie">XlsIO chart series.</param>
            <returns>returns series name.</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetStrokeDashArrayValues(System.Int16,Windows.UI.Xaml.Media.DoubleCollection@)">
            <summary>
            Get the stroke pattern value from the border property
            </summary>
            <param name="LinePatternFlag">Input border pattern property</param>
            <param name="patternValues">Out stroke thickness</param>
            <returns>boolean value indicates whether the pattern values are present or not</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetGapWidthandOverlap(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            Set GapWidth and Overlap for bar and column series.
            </summary>
            <param name="seriesBase">SfChart series base.</param>
            <param name="serie">XlsIO serie.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetGapWidthOnSingleSeries(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,System.Double@,System.Boolean)">
            <summary>
            Check for single seies present column and bar series, if found set the equal gapwidth
            </summary>
            <param name="seriesBase">input sfchart series</param>
            <param name="serie">input XlsIO chart</param>
            <param name="overlap">output overlap value</param>
            <param name="isChart3D">boolean value indicates whether the chart is 3D</param>
            <returns>the boolean value indicates whether the spacing has been set or not</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetBorderThickness(Syncfusion.XlsIO.Implementation.Charts.ChartBorderImpl)">
            <summary>
            Get the border thickness from the input border
            </summary>
            <param name="border">input Border</param>
            <returns>the border thickness value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetMarkerSymbol(Syncfusion.XlsIO.Implementation.Charts.ChartSerieDataFormatImpl,System.Int32)">
            <summary>
            Return the approximate marker symbol for the chart serie
            </summary>
            <param name="dataFormat">Input serie Data format</param>
            <param name="serieIndex">integer value for auto marker type</param>
            <returns>the approimate chart marker symbol value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfRotation3D(Syncfusion.XlsIO.Implementation.Charts.ChartImpl,Syncfusion.UI.Xaml.Charts.SfChart3D)">
            <summary>
            Rotate SfChart3D.
            </summary>
            <param name="chartImpl">XlsIO chart</param>
            <param name="sfChart">SfChart</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfWall(Syncfusion.UI.Xaml.Charts.SfChart3D,Syncfusion.XlsIO.Implementation.Charts.ChartImpl)">
            <summary>
            Set XlsIO wall brush to SfChart wall brush.
            </summary>
            <param name="sfChart3D">SfChart3D</param>
            <param name="backWall">XlsIo backwall</param>
            <param name="sideWall">XlsIO sidewall</param>
            <param name="floor">XlsIo floor</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetWallBrush(Syncfusion.XlsIO.Implementation.Charts.ChartImpl,Syncfusion.XlsIO.Implementation.Charts.ChartWallOrFloorImpl,System.Boolean)">
            <summary>
            Get brush from wall.
            </summary>
            <param name="wall">XlsIO wall.</param>
            <param name="isFloor">Boolean value indicates whether the wall is floor or not</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetBrushFromBorder(Syncfusion.XlsIO.Implementation.Charts.ChartBorderImpl)">
            <summary>
            Get the brush value from input border values
            </summary>
            <param name="border">input border value</param>
            <returns>the output brush</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetBrushFromDataFormat(Syncfusion.XlsIO.IChartFillBorder)">
            <summary>
            get the brush with color and transparent values from input chartseriedataformat
            </summary>
            <param name="fillFormat">the input chartseriedataformat</param>
            <returns>the brush</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetMaxGradientStop(Syncfusion.XlsIO.Implementation.Shapes.GradientStops)">
            <summary>
            Get the maximum gradient style used from the input chart
            </summary>
            <param name="gradientStops">input gardient stop collection</param>
            <returns>maximum used gradient stop</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.CheckAndApplyAxisLineStyle(Syncfusion.XlsIO.Implementation.Charts.ChartBorderImpl,Windows.UI.Xaml.Style@,Syncfusion.XlsIO.Implementation.Charts.ChartImpl,Syncfusion.ExcelChartToImageConverter.ChartElementsEnum,System.Boolean)">
            <summary>
            Check and apply the axis line style from chart border object
            </summary>
            <param name="border">input chart border object</param>
            <param name="lineStyle">the line style</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetBrushForTextElements(Syncfusion.XlsIO.Implementation.Charts.ChartBorderImpl)">
            <summary>
            Returns the UI border object from chart border object
            </summary>
            <param name="border">the chart border object</param>
            <returns>the border UI element</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.TryAndSetChartAxisTitle(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,System.Collections.Generic.Dictionary{Syncfusion.UI.Xaml.Charts.ChartAxis,System.Tuple{Windows.UI.Xaml.Controls.Border,Windows.Foundation.Point}},System.Collections.Generic.Dictionary{Syncfusion.UI.Xaml.Charts.ChartAxis,System.Tuple{Windows.UI.Xaml.Controls.Border,Windows.Foundation.Point}},System.Boolean,Windows.Foundation.Rect,System.Boolean)">
            <summary>
            Try and set the chart axis title from the input axes
            </summary>
            <param name="sfAxis">input sfchart axis</param>
            <param name="axisImpl">input chart axis</param>
            <param name="axisBorders">collection of axis title</param>
            <param name="axisDisplayUnitBorders">collection of display units</param>
            <param name="axisChangedOnPlotArea">boolean value indicates whether the axis changed based on plot area</param>
            <param name="manualRect">manual layout rectangle value</param>
            <param name="isRadar">boolean value indicates whether the chart is radar or not.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.RetainAxisTitleRotation(Windows.UI.Xaml.Controls.Border,Syncfusion.XlsIO.Implementation.Charts.ChartTextAreaImpl)">
            <summary>
            Retains the axis title rotation angle 
            </summary>
            <param name="axisTitleBorder">input axis title wpf border object</param>
            <param name="textArea">input axis textArea object</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetEmptySpacesAdded(Syncfusion.UI.Xaml.Charts.SfChart,System.Boolean,Syncfusion.UI.Xaml.Charts.ChartLegend)">
            <summary>
            Calculate and returns the byte value by checking sfchart elements
            </summary>
            <param name="sfChart">input sfchart object</param>
            <param name="isFunnel">boolean value indicates whether the chart is funnel or not</param>
            <returns>the byte value indicates the region might be cropped</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.TryAndGetColorBasedOnElement(Syncfusion.ExcelChartToImageConverter.ChartElementsEnum,Syncfusion.XlsIO.Implementation.Charts.ChartImpl,Windows.UI.Color@)">
            <summary>
             Gets the color value based on the input element name and style id. 
             A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="inputelement">input element enum</param>
            <param name="chart">the parent chart</param>
            <param name="color">the output color value</param>
            <returns>boolean value indicates whether the color getting is success or not</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.TryAndGetThicknessBasedOnElement(Syncfusion.ExcelChartToImageConverter.ChartElementsEnum,Syncfusion.XlsIO.Implementation.Charts.ChartImpl,System.Double@,System.Nullable{System.Int16})">
            <summary>
             Gets the thickness/marker size value based on the input element name and style id. 
             A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="inputelement">input element enum</param>
            <param name="chart">the parent chart</param>
            <param name="thickness">the output color value</param>
            <param name="value">nullable short value indicates the line thickness is set or not. only for marker size</param>
            <returns>boolean value indicates whether the thickness/marker size getting is success or not</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetPercentageTintOrShadeOfColor(Windows.UI.Color,System.Double,Windows.UI.Color)">
            <summary>
            Apply the input tint/shade value to the input color and returns the output color
            </summary>
            <param name="inputColor">the input color</param>
            <param name="percentValue">the input tint/shade color</param>
            <param name="mixColor">the mixing tint/shade color</param>
            <returns>the output color in which tint/shade is applied</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.TryAndGetFillOrLineColorBasedOnPattern(Syncfusion.XlsIO.Implementation.Charts.ChartImpl,System.Boolean,System.Int32,System.Int32,Windows.UI.Color@)">
            <summary>
             Gets the color value based on the input element name and style id for serie/data point line or fill
             A return value indicates whether the conversion succeeded or failed.
            </summary>       
            <param name="chart">the parent chart</param>
            <param name="formattingIndex">current formatting index of serie or data point</param>
            <param name="highFormattingIndex">highest formatting index of series or data point collection</param>
            <param name="isLine">boolean value indicates whether the color of fill or line is requeired</param>
            <param name="color">the output color value</param>
            <returns>boolean value indicates whether the color getting is success or not</returns>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.LabelConvertor">
            <summary>
            Converts the data label values.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.LabelConvertor.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.LabelConvertor.UpdateDataLabelText(System.String,System.Object,Syncfusion.ExcelChartToImageConverter.DataLabelSetting)">
            <summary>
            Update datalabel text. 
            </summary>
            <param name="text">Datalabel text</param>
            <param name="value">Series value</param>
            <param name="setting">Datalabel setting</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.LabelConvertor.LabelSettings(System.Object,Syncfusion.ExcelChartToImageConverter.DataLabelSetting)">
            <summary>
            Apply label settings.
            </summary>
            <param name="value">Label value.</param>
            <param name="dataLabelSetting">Data label setting.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.ExcelChartToImageConverter.LabelConvertor.UpdateDataLabelValuesFromCells(System.String,Syncfusion.ExcelChartToImageConverter.DataLabelSetting)" -->
        <member name="M:Syncfusion.ExcelChartToImageConverter.LabelConvertor.UpdateDataLabelSeriesName(System.String,Syncfusion.ExcelChartToImageConverter.DataLabelSetting)">
            <summary>
            Update the series name to datalabel. 
            </summary>
            <param name="text">datalabel text</param>
            <param name="dataLabelSetting">data label setting.</param>
            <returns>Datalabel text</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.LabelConvertor.UpdateDataLabelCategoryName(System.String,Syncfusion.ExcelChartToImageConverter.DataLabelSetting)">
            <summary>
            Update category name to datalabel.
            </summary>
            <param name="text">datalabel text</param>
            <param name="dataLabelSetting">Data label setting</param>
            <returns>Datalabel text</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.LabelConvertor.UpdateDataLabelValue(System.String,System.Object,Syncfusion.ExcelChartToImageConverter.DataLabelSetting)">
            <summary>
            Update series value to data label. 
            </summary>
            <param name="text">Datalabel text</param>
            <param name="value">Series value.</param>
            <param name="dataLabelSetting">Datalabel setting.</param>
            <returns>Datalabel text</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.LabelConvertor.UpdateDataLabelPercentange(System.String,System.Object,Syncfusion.ExcelChartToImageConverter.DataLabelSetting)">
            <summary>
            Update percentage value to datalabel. 
            </summary>
            <param name="text">Datalabel text</param>
            <param name="value">series value</param>
            <param name="dataLabelSetting">Datalabel setting.</param>
            <returns>Datalabel text</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.LabelConvertor.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ThicknessConverter">
            <summary>
            Converts the thickness respect to the data
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.FontConverter">
            <summary>
            Converts the thickness respect to the data
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ColorConverter">
            <summary>
            Converts the Color respect to the data
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ColorConverter.Brushes">
            <summary>
            Retruns the brush respect to the input value on numberformat
            Possible Keys are,
            ['0'] => denotes the color for zero value
            ['+'] => denotes the color for positive value
            ['-'] => denotes the color for negative value
            ['t'] => denotes the color for Text value
            ['d'] => denotes the color for Default value
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.AxisLabelConverter">
            <summary>
            Converts the input data to axis data
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.AxisLabelConverter.AxisTypeInByte">
            <summary>
            Indicates the axis type
            0 - vertical axis
            1 - category axis
            2 - stacked axis
            4 - date time axis
            8 - tickLabel none
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.AxisLabelConverter.PreviousLabelValue">
            <summary>
            Used to store the previous value in the value axis
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.AxisLabelConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.AxisLabelConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.DataLabelSetting">
            <summary>
            Reperesents the individual data label setting
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.MarkerSetting">
            <summary>
            Class used to store the Marker Formattings
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerSetting.m_borderBrush">
            <summary>
            Brush stores the border color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerSetting.m_fillBrush">
            <summary>
            Brush stores the fill color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerSetting.m_markerSize">
            <summary>
            Size of the marker symbol
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerSetting.m_borderThickness">
            <summary>
            Thickness value Marker's Border
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerSetting.m_markerTypeInInt">
            <summary>
            Marker Style enum Value in integer
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.MarkerSetting.BorderBrush">
            <summary>
            Gets/Sets Brush for the border
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.MarkerSetting.FillBrush">
            <summary>
            Gets/Sets Brush for the fill
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.MarkerSetting.MarkerSize">
            <summary>
            Gets/Sets Size of the marker symbol
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.MarkerSetting.BorderThickness">
            <summary>
            Gets/Sets the thickness value Marker's Border
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.MarkerSetting.MarkerTypeInInt">
            <summary>
            Gets/Sets Marker Style enum Value in integer
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.MarkerSetting.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
    </members>
</doc>
