<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfTileView.UWP</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.UI.Xaml.Controls.Layout.StateChangedEventArgs">
            <summary>
            Represents a class for defining the changes in the state.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.StateChangedEventArgs.newValue">
            <summary>
             Gets the new value of a state value property and returns the new value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.StateChangedEventArgs.oldValue">
            <summary>
            Gets the previous value of a state value property and returns the previous value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.StateChangedEventArgs.NewValue">
            <summary>
            Gets or sets the new value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.StateChangedEventArgs.OldValue">
            <summary>
            Gets or sets the previous value
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Controls.Layout.StateChangedEventHandler">
            <summary>
            Occurs when current <see
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileviewItem.State"/> is changed.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Controls.Layout.MinimizedItemsOrientation">
            <summary>
            specify the dimensions by which <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>&apos;s are stacked
            </summary>
            <remarks>
            Orientations are Top,Bottom,Right,Left.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.MinimizedItemsOrientation.Top">
            <summary>
            Position of the minimized TileViewItems in top of the maximized <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.MinimizedItemsOrientation.Bottom">
            <summary>
            Position of the minimized TileViewItems in Bottom of the maximized <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.MinimizedItemsOrientation.Right">
            <summary>
            position of the minimized TileViewItems in Right side of the maximized <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.MinimizedItemsOrientation.Left">
            <summary>
            position of the minimized TileViewItems in Left side of the maximized <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItemState">
            <summary>
            Specifies the state of the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
            <remarks>
            State are Normal,Maximized.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.TileViewItemState.Normal">
            <summary>
            The TileViewItems are in normal state
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.TileViewItemState.Maximized">
            <summary>
            The TileViewItems are in maximized state
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Controls.Layout.SfTileView">
            <summary>
            Represents a TileView that allows the user to layout the items as Tiles.
            </summary>
            <remarks>
            Tile View is the <see cref="T:Syncfusion.UI.Xaml.Primitives.Selector"/> acts as
            a container that can hold a set of <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>&apos;s which can host
            rich information.TileViewItems can be render in the following states
            Normal,Maximized,Minimized.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.AllowReorderProperty">
            <summary>
            Using a DependencyProperty as the backing store for AllowReorder.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.AllowDragDropProperty">
            <summary>
            Using a DependencyProperty as the backing store for AllowDragDrop.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MinimizedItemsOrientationProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinimizedItemsOrientation.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MinimizedItemsProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinimizedItems.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MaximizedItemProperty">
            <summary>
            Using a DependencyProperty as the backing store for MaximizedItem.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MaximizedItemWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for MaximizedItemWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MaximizedItemContainerStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for MaximizedItemStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MaximizedItemTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for MaximizedItemTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MaximizedItemHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for MaximizedItemHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.ItemWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for ItemWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.ItemHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for ItemHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MaximizedContentTransitionsProperty">
            <summary>
            Using a DependencyProperty as the backing store for MaximizedContentTransition.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OrientationProperty">
            <summary>
            Using a DependencyProperty as the backing store for Orientation.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.InternalItemsSourceProperty">
            <summary>
            Using a DependencyProperty as the backing store for InternalItemsSource.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.ConstMinimizeButtonShowTime">
            <summary>
            Represents time to show the minimize button
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.popupTimer">
            <summary>
            To Close the popup when the mouse dragging outside the item
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.dragTimer">
            <summary>
            To Close the popup when the mouse dragging outside the item
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.ispointerpressed">
            <summary>
            Flag to indicate whether the mouse pointer is pressed or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.draggedItem">
            <summary>
            Represents the currently dragged item
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.point">
            <summary>
            Represents current point and previous point
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.previousPoint">
            <summary>
            Represents current point and previous point
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.isItemsCollection">
            <summary>
            Flag to indicate whether the collection is Items collection or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.partContent">
            <summary>
            Represents the content control variable
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.internalItems">
            <summary>
            Represents the internal tile items
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.partRoot">
            <summary>
            Represents the root grid element which contains all child elements
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.partGrid">
            <summary>
            Represents grid element.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.partMinimizeButton">
            <summary>
            Represents minimize button in tile item
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.minimizeButtonTimer">
            <summary>
            Represents the Dispatcher timer variable
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.maxItemHeightSet">
            <summary>
            Flag to represents whether the maximum height and maximum width is set to the item
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.maxItemWidthSet">
            <summary>
            Flag to represents whether the maximum height and maximum width is set to the item
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.maximizedonload">
            <summary>
            Flag to represents whether the maximized item is loaded or not
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.SfTileView"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.AllowReorder">
            <summary>
            Gets or sets a value indicating whether the elements in the tile view can be reordered or not
            <see cref="T:Syncfusion.UI.Xaml.Controls.Layout.SfTileView"/>
            </summary>
            <value>
            <c>true</c> if this instance is selected; otherwise, <c>false</c>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.AllowDragDrop">
            <summary>
            Gets or sets a value indicating whether Tile Items can be dragged and dropped in TileView.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MinimizedItemsOrientation">
            <summary>
            Gets or sets the minimized items orientation.
            </summary>
            <value>
            It accepts the type of <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.MinimizedItemsOrientation"/>. The
            default value is <see
            cref="F:Syncfusion.UI.Xaml.Controls.Layout.MinimizedItemsOrientation.Right">MinimizedItemsOrientation.Right</see>.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItem"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MinimizedItems">
            <summary>
            Gets or sets the collection of minimized <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem">TileViewItem&apos;s</see>.
            </summary>
            <value>
            It accepts the type of <see
            cref="T:System.Collections.ObjectModel.ObservableCollection`1">ObservableCollection&lt;&gt;</see>.
            The default value is null.
            </value>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MinimizedItemsOrientation"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MaximizedItem">
            <summary>
            Gets the current maximized <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
            <value>
            The default value is null.
            </value>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedContentTransitions"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemContainerStyle"/>
            <seealso
            cref="F:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemHeightProperty"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemTemplate"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemWidth"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MaximizedItemWidth">
            <summary>
            Gets or sets the width of the current maximized <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
            <value>
            The default value is zero.
            </value>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedContentTransitions"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemContainerStyle"/>
            <seealso
            cref="F:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemHeightProperty"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemTemplate"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItem"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MaximizedItemContainerStyle">
            <summary>
            Gets or sets the style of the current maximized <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/> containers.
            </summary>
            <value>
            The default value is null.
            </value>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedContentTransitions"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItem"/>
            <seealso
            cref="F:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemHeightProperty"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemTemplate"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemWidth"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MaximizedItemTemplate">
            <summary>
            Gets or sets the <see cref="N:Windows.UI.Xaml.DataTemplate"/> that is
            used to display the content of the maximized <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
            <remarks>
            Used to specify the visualization of the minimized data objects.
            </remarks>
            <value>
            The default value is null.
            </value>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedContentTransitions"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemContainerStyle"/>
            <seealso
            cref="F:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemHeightProperty"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItem"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemWidth"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MaximizedItemHeight">
            <summary>
            Gets or sets the height of the current maximized <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
            <value>
            The default value is zero.
            </value>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedContentTransitions"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemContainerStyle"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItem"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemTemplate"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemWidth"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.ItemWidth">
            <summary>
            Gets or sets the width of the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
            <value>
            The default value is zero.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.ItemHeight"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.ItemHeight">
            <summary>
            Gets or sets the height of the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
            <value>
            The height of the item.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.ItemWidth"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.MaximizedContentTransitions">
            <summary>
            Gets or sets the collection of transitions applied to the Maximized <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
            <value>
            It will accepts the type of <see
            cref="N:Windows.UI.Xaml.Media.Animation.TransitionCollection"/>. The default
            value is null.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItem"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemContainerStyle"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItem"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemTemplate"/>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MaximizedItemWidth"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.Orientation">
            <summary>
            Gets or sets a value that indicates the dimension by which child elements are
            stacked.
            </summary>
            <remarks>
            The orientations are Vertical,Horizontal.
            </remarks>
            <value>
            The Default value is <see cref="N:Windows.UI.Xaml.Controls.Orientation">Orientation</see>
            </value>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileView.MinimizedItemsOrientation"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.InternalItemsSource">
            <summary>
            Gets or sets the value of Items source internally.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.PARTItems">
            <summary>
            Gets or sets the items
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.PreviousItem">
            <summary>
            Gets or sets the previous item
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.TileViewPanel">
            <summary>
            Gets or sets the panel which contains TileView
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.PreviousDraggingItem">
            <summary>
            Gets or sets the previous dragging item
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.IsPointerPressed">
            <summary>
            Gets or sets a value indicating whether the mouse pointer is pressed or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.PointPressed">
            <summary>
            Gets or sets the pointer which is captured during pointer pressed event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.Dispose">
            <summary>
            Disposes the control while unloading.
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.ChangeMinimizedItemsOrientation">
            <summary>
            To update the orientation of minimized tile items
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.CloseDraggingPopup">
            <summary>
            To close the dragging popup
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.StartTileViewItemDragEvents(Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem)">
            <summary>
            Method to initialize the TileViewItem Drag events.
            </summary>
            <param name="tileViewItem">The tileViewItem.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.EndTileViewItemDragEvents(Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem)">
            <summary>
             Method to delete the TileViewItem Drag events.
            </summary>
            <param name="rc">Drag able report card</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.Dispose(System.Boolean)">
            <summary>
            Disposing unused objects
            </summary>
            <param name="disposing">Flag to represents whether the objects are disposable or not</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnApplyTemplate">
            <summary>
            Initializes all the child elements of the <see 
            cref="T:Syncfusion.UI.Xaml.Controls.Navigation.SfTileView"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnItemsChanged(System.Object)">
            <summary>
            Called when the item is changed
            </summary> 
            <param name="e">Argument of Items Changed method</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnMinimizedItemsOrientationChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the selected TileView item <see 
            cref="T:Syncfusion.UI.Xaml.Controls.Navigation.SfTileView"/> 
            minimized items orientation is changed.
            </summary>
            <param name="args">The method arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnOrientationChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the selected TileView item <see 
            cref="T:Syncfusion.UI.Xaml.Controls.Navigation.SfTileView"/> orientation is changed.
            </summary>
            <param name="args">The method arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnSelectionChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the selected TileView item <see 
            cref="T:Syncfusion.UI.Xaml.Controls.Navigation.SfTileView"/> is changed.
            </summary>
            <param name="args">The method arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called when a pointer leaves the area of the element .
            </summary> 
            <param name="e">The method argument</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            Called when the input device changes position during a manipulation.
            </summary> 
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnInternalItemsChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Invokes whether the property InternalItems  has been changed
            </summary>
            <param name="sender">source of the event</param>
            <param name="e">the event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnMinimizedItemsOrientationChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Invokes when minimized items orientation is changed
            </summary>
            <param name="obj">source of the event</param>
            <param name="args">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnMaximizedItemChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Invokes when minimized item is changed
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnMaximizedItemWidthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Invokes when the width of the minimized item is changed
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnMaximizedItemHeightChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Invokes when the height of the minimized item is changed
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.OnOrientationChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Invokes when the orientation of the tile item is changed.
            </summary>
            <param name="obj">Source of the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.TileViewItem_PointerReleased(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invokes when pointer is released from tile item
            </summary>
            <param name="sender">source of the event</param>
            <param name="pointerRoutedEventArgs">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.TileViewItem_PointerMoved(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invokes when pointer moves over the tile view item
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.TileViewItem_PointerPressed(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invokes when the pointer is pressed
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.PART_Content_ManipulationDelta(System.Object,Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            Invoked when content of the tile item's position changed during manipulation
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.DragTimer_Tick(System.Object,System.Object)">
            <summary>
            Handler executes when the tile item is started dragging after specified interval
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.TileView_Loaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handle the unloaded event of TileView control
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.SfTileView_DataContextChanged(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.DataContextChangedEventArgs)">
            <summary>
            Updates selection when data context changed
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.SfTileView_IsEnabledChanged(System.Object,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Invokes when the IsEnabled property is changed
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.SfTileView_PointerExited(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invokes when mouse pointer exited 
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.ScrollViewer_LostFocus(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Invokes when ScrollViewer loses focus.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.ScrollViewer_GotFocus(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Invokes when ScrollViewer receives focus
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.SfTileView_PointerCaptureLost(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invokes when captured pointer is lost
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.SfTileView_PointerReleased(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invokes when pointer is released
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.Content_PointerReleased(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invokes when pointer is released from tile view content
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.Content_PointerMoved(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invokes when pointer is moved over the tile view content
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.CancelDragging">
            <summary>
            To Cancel the dragging event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.ScrollViewer_PointerExited(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invokes when pointer exited over scroll viewer
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.PopupTimer_Tick(System.Object,System.Object)">
            <summary>
            Handler executes when the tile item is popped up in specified interval
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.TileView_Unloaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles unload event of the control
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.TileView_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invokes when the tile collection is modified.
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.PART_Grid_PointerMoved(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invokes when pointer moves over the grid
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.Timer_Tick(System.Object,System.Object)">
            <summary>
            Handler executes when a DispatchTimer is started on a given Interval.
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.PART_Grid_PointerExited(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invokes when pointer exited from the grid 
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.PART_MinimizeButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Invokes when the minimize button of the tile item is clicked
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.RestoreAll">
            <summary>
            Restoring tile items state and updating maximized and previous item 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.PART_Content_ManipulationCompleted(System.Object,Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
            <summary>
            Occurs when a manipulation and inertia on the content of the tile item is complete.
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.InitializeItems">
            <summary>
            Initializing Tile items
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.UpdateSelection">
            <summary>
            Updating the selection of the Tile items
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileView.AddMaximizedItem(Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem)">
            <summary>
            Updating maximized item
            </summary>
            <param name="inserteditem">Item to be inserted</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem">
            <summary>
            Represents a selectable item inside a <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileView"/>.
            </summary>
            <remarks>
            Tile view item is a <see cref="T:Windows.UI.Xaml.Controls.ContentControl">ContentControl</see>
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.MaximizedContentProperty">
            <summary>
            Using a DependencyProperty as the backing store for MaximizedContent.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.StateProperty">
            <summary>
            Using a DependencyProperty as the backing store for TileViewItemState.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.canExecute">
            <summary>
            Represents whether the application is idle to see if the specific command is currently available
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.partpreview">
            <summary>
            Represents the preview popup
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.tempContent">
            <summary>
            Represents the temp content of the tile items
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.partpreviewHost">
            <summary>
            Represents the grid elements 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.parthost">
            <summary>
            Represents the grid elements 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.parenttileview">
            <summary>
            Represents the parent tile view of the tile items
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.ispressed">
            <summary>
            Represents the pointer has been pressed or not in tile items
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.StartPoint">
            <summary>
            Represents tile item pressed point
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem"/> class.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.StateChanged">
            <summary>
            Occurs when current <see
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileviewItem.State"/> is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.MaximizedContent">
            <summary>
            Gets or sets the content in maximized <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItemState"/>.
            </summary>
            <remarks>
            Used to customize the Maximized item content.
            </remarks>
            <value>
            The default value is null.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.State">
            <summary>
            Gets or sets the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItemState"/>.
            </summary>
            <value>
            The default value is <see
            cref="F:Syncfusion.UI.Xaml.Controls.Layout.TileViewItemState.Normal">TileViewItemState.Normal</see>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.PartPreview">
            <summary>
            Gets or sets value for preview popup
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.PartPreviewHost">
            <summary>
            Gets or sets value for PartPreviewHost 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.PartHost">
            <summary>
            Gets or sets value for PartHost 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.ParentTileView">
            <summary>
            Gets or sets value for the parent tile view of the tile items
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.Dispose">
            <summary>
            A method to dispose TileItems
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.UpdateState">
            <summary>
            Update the tile item state by touch or mouse 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.Dispose(System.Boolean)">
            <summary>
            Disposing unused objects
            </summary>
            <param name="disposing">Flag to represents whether the objects are disposable or not</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.OnStateChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the TileViewItemState Property changed.
            </summary>
            <param name="args">The DependencyPropertyChangedEventArgs instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invoked when the pointer is released
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invoked when the pointer is pressed
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Invoked when the pointer is moved
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Occurs when Pointer entered
            </summary>
            <param name="e">Event argument</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Occurs when Pointer exited
            </summary>
            <param name="e">Event argument</param>    
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Occurs when Tap interaction occurs over the tile view item.
            </summary>
            <param name="e">Event argument</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.OnApplyTemplate">
            <summary>
            Initializes all the child elements of <see
            cref="T:Syncfusion.UI.Xaml.Controls.Input.SfTileViewItem"/> control.
            </summary>    
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.OnStateChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the TileViewItemState Property changed.
            </summary>
            <param name="obj">Dependency object</param>
            <param name="args">The DependencyPropertyChangedEventArgs instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.ScrollViewer_ManipulationDelta(System.Object,Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            Occurs when the input device changes position during a manipulation.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.UpdateMinimizedItems(System.Object)">
            <summary>
            Updating minimized items of the TileView
            </summary>
            <param name="item">tile view items</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.SfTileViewItem_Unloaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles unloaded event of the Tile Item
            </summary>
            <param name="sender">source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.SfTileViewItem_Loaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles loaded event of the Tile Item
            </summary>
            <param name="sender">source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.SfTileViewItem_Tapped(System.Object,Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Invoked when tap to maximize the tile item
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">Tapped routed event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.SfTileViewItem.SfTileViewItem_IsEnabledChanged(System.Object,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Invokes when the IsEnabled property is changed
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl">
            <summary>
            Represents a TileItemsControl that used to present a collection of <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl"/>&apos;s as Tiled
            layout.
            </summary>
            <remarks>
            The TileItemsControl is a <see cref="N:Windows.UI.Xaml.Controls.TileItemsControl"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.ItemWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for ItemWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.ItemHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for ItemHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.OrientationProperty">
            <summary>
            Using a DependencyProperty as the backing store for Orientation.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.ItemWidth">
            <summary>
            Gets or sets the width of the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
            <value>
            The default value is zero.
            </value>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.ItemHeight"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.ItemHeight">
            <summary>
            Gets or sets the height of the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
            <value>
            The default value is zero.
            </value>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.ItemWidth"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.Orientation">
            <summary>
            Gets or sets a value that indicates the dimension by which <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>&apos;s are stacked.
            </summary>
            <value>
            It will accepts the type is <see
            cref="N:Windows.UI.Xaml.Controls.Orientation"/>. The default value is <see
            cref="N:Windows.UI.Xaml.Controls.Orientation"/>.Horizontal.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.Tileview">
            <summary>
            Gets or sets the value for tile view element
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.ScrollViewer">
            <summary>
            Gets or sets the value for scroll viewer element
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.ItemsPresenter">
            <summary>
            Gets or sets the value for items presenter variable
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.Dispose">
            <summary>
            A method to dispose items
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.OnApplyTemplate">
            <summary>
            Initializes all the child elements of the <see 
            cref="T:Syncfusion.UI.Xaml.Controls.Navigation.TileItemsControl"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Checks if the item is a <see 
            cref="T:Syncfusion.UI.Xaml.Controls.Navigation.SfTileViewItem"/>
            </summary>
            <param name="item">argument of the method</param>
            <returns>
            <c>true</c> if this instance is selected; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.GetContainerForItemOverride">
            <summary>
            Checks if the item is a <see 
            cref="T:Syncfusion.UI.Xaml.Controls.Navigation.SfTileViewItem"/>
            </summary>
            <returns>Dependency Object</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.PrepareContainerForItemOverride(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Arranges the container for overridden items
            </summary>
            <param name="element">Dependency object</param>
            <param name="item">Item of the container</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.TileItemsControl.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called when a pointer leaves the area of the element .
            </summary> 
            <param name="e">Argument of the event</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewPanel">
            <summary>
            Used to group and arrange the collections of <see
            cref="T:Syncfusion.UI.Xaml.Controls.Layout.TileViewItem"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Controls.Layout.TileViewPanel.parentItemsControl">
            <summary>
            Represents parent items control
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Controls.Layout.TileViewPanel.ParentItemsControl">
            <summary>
            Gets ItemsControl of parent TileView
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.TileViewPanel.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Calculates the size for the UIElements
            </summary>
            <param name="availableSize">Available size of the panel</param>
            <returns>Returns the available size of the panel</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.TileViewPanel.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Arranges the overridden elements
            </summary>
            <param name="finalSize">Final size of the panel</param>
            <returns>Size of the Panel</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider">
            <summary>
            Main class for providing metadata for the app or library
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.Type)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
    </members>
</doc>
